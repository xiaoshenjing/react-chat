{"version":3,"sources":["store/reducer sync /.js$","store/reducer/content.js","store/reducer/header.js","store/reducer/login.js","serviceWorker.js","pages/style.js","router/index.js","store/index.js","pages/header/style.js","store/action/header.js","api/base.js","store/action/login.js","api/index.js","pages/header/index.js","pages/content/style.js","hoc/ItemList/style.js","components/ItemList/index.js","hoc/ItemList/index.js","store/action/content.js","pages/content/index.js","pages/login/style.js","pages/login/index.js","pages/index.js","utils/mock.js","index.js","store/enums/content.js","store/enums/login.js","store/enums/header.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","defaultProps","fromJS","list","state","action","type","enums","ADD_LIST","message","success","set","get","push","item","DELETE_LIST","delete","EDIT_LIST","setIn","content","GET_LIST","data","flag","OPEN_LOGIN","CLOSE_LOGIN","login","GET_LOGIN","LOGIN","REGISTER","LOGOUT","Boolean","window","location","hostname","match","AppWrapper","styled","div","Router","to","path","exact","component","Content","Login","reducerModules","require","asyncReducer","value","default","reducer","combineReducers","composeEnhancers","composeWithDevTools","features","pause","lock","persist","export","import","jump","skip","reorder","dispatch","test","store","createStore","applyMiddleware","thunk","Wrapper","Title","http","url","this","axios","Axios","create","baseURL","timeout","interceptors","response","use","Promise","error","console","log","status","msg","reject","fullFlag","check","res","full","post","JSON","stringify","put","account","password","API","then","Header","props","openLogin","closeLogin","logout","onClick","getLogin","PureComponent","_header","connect","getIn","actionHeader","actionLogin","Input","textarea","List","TextArea","ItemList","Res","View","visible","handleOk","bind","handleCancel","edit","name","index","delectList","size","setState","editList","hocComponent","onChange","target","title","onOk","onCancel","placeholder","autoSize","minRows","maxRows","addList","ref","input","block","key","getList","_content","actionContent","Label","label","ButtonWrapper","register","_login","App","Random","Mock","result","parse","decroate","method","mock","RegExp","i","integer","cname","cparagraph","ctitle","postList","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Symbol"],"mappings":"yIAAA,IAAIA,EAAM,CACT,eAAgB,IAChB,cAAe,IACf,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,iCCxBpB,mCAIMY,EAAeC,iBAAO,CACxBC,KAAM,KAGK,qBAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7C,OAAQA,EAAOC,MACX,KAAKC,IAAMC,SAEP,OADAC,IAAQC,QAAQ,4BACTN,EAAMO,IAAI,OAAQP,EAAMQ,IAAI,QAAQC,KAAKX,iBAAOG,EAAOS,QAClE,KAAKP,IAAMQ,YAEP,OADAN,IAAQC,QAAQ,4BACTN,EAAMO,IAAI,OAAQP,EAAMQ,IAAI,QAAQI,OAAOX,EAAOhB,KAC7D,KAAKkB,IAAMU,UAEP,OADAR,IAAQC,QAAQ,4BACTN,EAAMc,MAAM,CAAC,OAAQb,EAAOhB,GAAI,WAAYgB,EAAOc,SAC9D,KAAKZ,IAAMa,SACP,OAAOhB,EAAMO,IAAI,OAAQT,iBAAOG,EAAOgB,OAC3C,QACI,OAAOjB,K,iCCtBnB,2BAGMH,EAAeC,iBAAO,CACxBoB,MAAM,IAGK,qBAAmC,IAAlClB,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7C,OAAQA,EAAOC,MACX,KAAKC,IAAMgB,WACP,OAAOnB,EAAMO,IAAI,QAAQ,GAC7B,KAAKJ,IAAMiB,YACP,OAAOpB,EAAMO,IAAI,QAAQ,GAC7B,QACI,OAAOP,K,iCCdnB,mCAIMH,EAAeC,iBAAO,CACxBuB,OAAO,IAGI,qBAAmC,IAAlCrB,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC7C,OAAQA,EAAOC,MACX,KAAKC,IAAMmB,UACP,OAAOtB,EAAMO,IAAI,QAASN,EAAOgB,MACrC,KAAKd,IAAMoB,MAEP,OADAlB,IAAQC,QAAQ,4BACTN,EAAMO,IAAI,SAAS,GAC9B,KAAKJ,IAAMqB,SAEP,OADAnB,IAAQC,QAAQ,4BACTN,EAAMO,IAAI,SAAS,GAC9B,KAAKJ,IAAMsB,OAEP,OADApB,IAAQC,QAAQ,4BACTN,EAAMO,IAAI,SAAS,GAC9B,QACI,OAAOP,K,kGCVC0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4LChBC,IAAMC,EAAaC,IAAOC,IAAV,K,gBCEVC,EAAS,kBAClB,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAUC,GAAG,aACb,kBAAC,IAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAWC,KACxC,kBAAC,IAAD,CAAOH,KAAK,SAASC,OAAK,EAACC,UAAWE,O,mCCJxCC,EAAiBC,OAEjBC,EAAe,GACrBF,EAAejD,OAAOV,KAAI,SAAA4B,GACtB,IAAMkC,EAAQH,EAAe/B,GAE7B,OADAiC,EAAajC,EAAKoB,MAAM,aAAa,IAAMc,EAAMC,SAC1C,KAGX,IAAMC,EAAUC,0BAAgBJ,GAE1BK,EAAmBC,8BAAoB,CACzCC,SAAU,CACNC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,OAAQ,SACRC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,MAAM,KASCC,EAJDC,sBAAYhB,EAASE,EAC/Be,0BAAgBC,O,uSC/Bb,IAAMC,EAAUjC,IAAOC,IAAV,KAMPiC,EAAQlC,IAAOC,IAAV,K,QCNH,EACA,iBAAO,CAAE/B,KAAMC,IAAMgB,aADrB,EAEC,iBAAO,CAAEjB,KAAMC,IAAMiB,c,mDCqGtB+C,EAFF,I,WApGT,WAAYC,GAAM,oBACdC,KAAKC,MAAQC,IAAMC,OAAO,CACtBC,QAASL,EACTM,QAAS,M,oDAKbL,KAAKC,MAAMK,aAAaC,SAASC,KAC7B,SAAAD,GACI,OAAOE,QAAQpF,QAAQkF,MAE3B,SAAAG,GAEI,OADAC,QAAQC,IAAIF,GACJA,EAAMH,SAASM,QACnB,KAAK,IACDH,EAAM1E,QAAU,2BAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,yDAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,2BAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,gEAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,6CAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,2BAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,uCAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,6CAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,uCAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,iCAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,2BAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,iCAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,2BAChB,MACJ,KAAK,IACD0E,EAAM1E,QAAU,uDAChB,MACJ,QACI0E,EAAM1E,QAAN,mCAAwB0E,EAAMH,SAASO,KAE/C,OAAOL,QAAQM,OAAOL,Q,2BAK7BH,EAAU1D,GACX,GAAI0D,EAAS3D,MAA+B,IAAvB2D,EAAS3D,KAAK1B,KAC/B,OAAK2B,EAGM4D,QAAQpF,QAAQkF,EAAS3D,MAFzB6D,QAAQpF,QAAQkF,EAAS3D,KAAKA,Q,mEAOvCmD,G,qIAAyC,G,IAAlCnD,Y,MAAO,K,MAAMoE,gB,SAC1BhB,KAAKiB,Q,SACajB,KAAKC,MAAM9D,IAAI4D,EAAKnD,G,cAAhCsE,E,yBACClB,KAAKmB,KAAKD,EAAKF,I,2KAGfjB,G,qIAAyC,G,IAAlCnD,Y,MAAO,K,MAAMoE,gB,SAC3BhB,KAAKiB,Q,SACajB,KAAKC,MAAMmB,KAAKrB,EAAKsB,KAAKC,UAAU1E,I,cAAhDsE,E,yBACClB,KAAKmB,KAAKD,EAAKF,I,0KAGhBjB,G,qIAAyC,G,IAAlCnD,Y,MAAO,K,MAAMoE,gB,SAC1BhB,KAAKiB,Q,SACajB,KAAKC,MAAMsB,IAAIxB,EAAKnD,G,cAAhCsE,E,yBACClB,KAAKmB,KAAKD,EAAKF,I,6KAGbjB,G,qIAAyC,G,IAAlCnD,Y,MAAO,K,MAAMoE,gB,SAC7BhB,KAAKiB,Q,SACajB,KAAKC,MAAM1D,OAAOwD,EAAKnD,G,cAAnCsE,E,yBACClB,KAAKmB,KAAKD,EAAKF,I,8GAIjB,CAAS,KCpGP,MACJ,SAAC1B,EAAU1C,ICQf,YAAuC,IAAtB4E,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC7B,OAAO3B,EAAKsB,KAAK,QAAS,CAAExE,KAAM,CAAE4E,UAASC,eDRzCC,CAAU9E,GAAM+E,MAAK,WACjBrC,EAAS,CAAEzD,KAAMC,IAAMoB,YAHpB,EAMD,SAACoC,EAAU1C,ICOlB,YAA0C,IAAtB4E,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAChC,OAAO3B,EAAKsB,KAAK,WAAY,CAAExE,KAAM,CAAE4E,UAASC,eDP5CC,CAAa9E,GAAM+E,MAAK,WACpBrC,EAAS,CAAEzD,KAAMC,IAAMqB,eARpB,EAWH,SAACmC,GCOFQ,EAAKsB,KAAK,UDNAO,MAAK,WACdrC,EAAS,CAAEzD,KAAMC,IAAMsB,aAbpB,EAgBD,SAACkC,GCXJQ,EAAK3D,IAAI,SDYGwF,MAAK,SAAAT,GAChB5B,EAAS,CAAEzD,KAAMC,IAAMmB,UAAWL,KAAMsE,EAAIlE,YEblD4E,E,iLACQ,IAAD,EACkD5B,KAAK6B,MAApDhF,EADH,EACGA,KAAMiF,EADT,EACSA,UAAWC,EADpB,EACoBA,WAAY/E,EADhC,EACgCA,MAAOgF,EADvC,EACuCA,OAE5C,OACI,kBAACpC,EAAD,KACI,kBAACC,EAAD,+DAEI7C,EACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAUc,GAAG,aACb,kBAAC,IAAD,CAAQjC,KAAK,SAASoG,QAAS,kBAAMD,MAArC,iBAGJnF,EACI,kBAAC,IAAD,CAAMiB,GAAG,YACL,kBAAC,IAAD,CAAQjC,KAAK,UAAUoG,QAAS,kBAAMF,MAAtC,iBAGJ,kBAAC,IAAD,CAAMjE,GAAG,UACL,kBAAC,IAAD,CAAQjC,KAAK,UAAUoG,QAAS,kBAAMH,MAAtC,oB,kDASxB9B,KAAK6B,MAAMK,e,GA7BEC,iBAqDRC,EAAUC,aApBC,SAAC1G,GAAD,MAAY,CAChCkB,KAAMlB,EAAM2G,MAAM,CAAC,SAAU,SAC7BtF,MAAOrB,EAAM2G,MAAM,CAAC,QAAS,cAGN,SAAChD,GAAD,MAAe,CACtCwC,UADsC,WAElCxC,EAASiD,MAEbR,WAJsC,WAKlCzC,EAASiD,MAEbP,OAPsC,WAQlCQ,EAAmBlD,IAEvB4C,SAVsC,WAWlCM,EAAqBlD,OAIN+C,CAA6CT,G,8PC3D7D,IAAMa,EAAQ9E,IAAO+E,SAAV,K,smBCAX,IAAMC,GAAOhF,IAAOC,IAAV,MAQJiC,GAAQlC,IAAOC,IAAV,MASLM,GAAUP,IAAOC,IAAV,MAKPgC,GAAUjC,IAAOC,IAAV,K,oBCrBZgF,GAAaH,KAAbG,SAuCOC,GArCE,SAACjG,GACd,IAAMkG,ECFK,SAAClG,GAAD,OAAU,SAACmG,GAkDtB,OAlD+B,YAE3B,aAAe,IAAD,8BACV,+CACKpH,MAAQ,CACTqH,SAAS,GAEb,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBAPF,EAFa,sEAYjB,IACEtI,EAAyCgC,EAAzChC,GAAIyI,EAAqCzG,EAArCyG,KAAM3G,EAA+BE,EAA/BF,QAAS4G,EAAsB1G,EAAtB0G,MAAOC,EAAe3G,EAAf2G,WAElC,OACI,kBAACZ,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAQ9G,KAAK,UAAU2H,KAAK,QAAQvB,QAASjC,KAAKoD,MAAlD,gBACA,kBAAC,IAAD,CAAQvH,KAAK,SAAS2H,KAAK,QAAQvB,QAAS,kBAAMsB,EAAWD,KAA7D,iBAEJ,kBAAC,GAAD,KAAQ1I,EAAR,IAAayI,GACb,kBAAC,GAAD,KAAU3G,GACV,kBAACqG,EAAD,CACIC,QAAShD,KAAKrE,MAAMqH,QACpBC,SAAUjD,KAAKiD,SACfE,aAAcnD,KAAKmD,kBA1BR,6BAiCvBnD,KAAKyD,UAAS,iBAAO,CACjBT,SAAS,QAlCU,+BAsClBzE,IAELmF,EAD4B9G,EAApB8G,UAAoB9G,EAAV0G,MACF/E,KAxCO,qCA4CvByB,KAAKyD,UAAS,iBAAO,CACjBT,SAAS,UA7CU,GACJb,kBDCfwB,CAAa/G,EAAb+G,EAAmB,SAAA9B,GAAU,IAC7BmB,EAAoCnB,EAApCmB,QAASC,EAA2BpB,EAA3BoB,SAAUE,EAAiBtB,EAAjBsB,aAErBL,EAH8B,2MAIhCnH,MAAQ,CACJ4C,MAAO,IALqB,EAQhCqF,SAAW,YAA4B,IAAfrF,EAAc,EAAxBsF,OAAUtF,MACpB,EAAKkF,SAAS,CAAElF,WATY,wEAYtB,IAAD,OACL,OACI,kBAAC,KAAD,CACIuF,MAAM,2BACNd,QAASA,EACTe,KAAM,kBAAMd,EAAS,EAAKtH,MAAM4C,QAChCyF,SAAUb,GAEV,kBAACP,GAAD,CACIrE,MAAOyB,KAAKrE,MAAM4C,MAClBqF,SAAU5D,KAAK4D,SACfK,YAAY,sBACZC,SAAU,CAAEC,QAAS,EAAGC,QAAS,UAxBjB,GAGlBjC,iBA2BlB,OAAO,kBAACW,EAAD,SAGX,OAAO,kBAACA,EAAD,O,SEpCI,GACF,SAACxD,EAAU5C,INoBjB,YAA+B,IAAZA,EAAW,EAAXA,QACtB,OAAOoD,EAAKsB,KAAK,OAAQ,CAAExE,KAAM,CAAEF,cMpB/BgF,CAAY,CAAEhF,YAAWiF,MAAK,SAAAT,GAC1B5B,EAAS,CAAEzD,KAAMC,KAAMC,SAAUM,KAAM6E,EAAI7E,WAHxC,GAMC,SAACiD,EAAU1E,INoBpB,YAA6B,IAAPA,EAAM,EAANA,GACzB,OAAOkF,EAAKvD,OAAO,OAAQ,CAAEK,KAAM,CAAEhC,SMpBjC8G,CAAe,CAAE9G,OAAM+G,MAAK,WACxBrC,EAAS,CAAEzD,KAAMC,KAAMQ,YAAa1B,WARjC,GAWD,SAAC0E,EAAU1E,EAAI8B,INoBtB,YAAoC,IAAhB9B,EAAe,EAAfA,GAAI8B,EAAW,EAAXA,QAC3B,OAAOoD,EAAKyB,IAAI,OAAQ,CAAE3E,KAAM,CAAEhC,KAAI8B,cMpBlCgF,CAAa,CAAE9G,KAAI8B,YAAWiF,MAAK,WAC/BrC,EAAS,CAAEzD,KAAMC,KAAMU,UAAW5B,KAAI8B,gBAbnC,GAgBF,SAAC4C,GNfHQ,EAAK3D,IAAI,QMgBEwF,MAAK,SAAAT,GACf5B,EAAS,CAAEzD,KAAMC,KAAMa,SAAUC,KAAMsE,EAAIxF,WCdjDwC,G,iLACQ,IAAD,SAC2C8B,KAAK6B,MAA7CnG,EADH,EACGA,KAAM2I,EADT,EACSA,QAASd,EADlB,EACkBA,WAAYG,EAD9B,EAC8BA,SAEnC,OACI,kBAAC,WAAD,KACI,kBAACjB,EAAD,CAAO6B,IAAK,SAAAC,GAAW,EAAKA,MAAQA,KACpC,kBAAC,IAAD,CAAQ1I,KAAK,UAAU2I,OAAK,EAACvC,QAAS,kBAAMoC,EAAQ,EAAKE,MAAMhG,SAA/D,gBAEI7C,EAAKjB,KAAI,SAAC4B,EAAMiH,GAAP,OACL,kBAAE,GAAF,CACImB,IAAKnB,EACLC,WAAYA,EACZG,SAAUA,EACVJ,MAAOA,EACP1I,GAAIyB,EAAKF,IAAI,MACbO,QAASL,EAAKF,IAAI,WAClBkH,KAAMhH,EAAKF,IAAI,gB,0CASnC6D,KAAK6B,MAAM6C,c,GA1BGvC,iBAiDTwC,GAAWtC,aAnBA,SAAC1G,GAAD,MAAY,CAChCD,KAAMC,EAAM2G,MAAM,CAAC,UAAW,aAGP,SAAChD,GAAD,MAAe,CACtC+E,QADsC,SAC9B3H,GACJkI,GAAsBtF,EAAU5C,IAEpCgH,SAJsC,SAI7B9I,EAAI8B,GACTkI,GAAuBtF,EAAU1E,EAAI8B,IAEzC6G,WAPsC,SAO3B3I,GACPgK,GAAyBtF,EAAU1E,IAEvC8J,QAVsC,WAWlCE,GAAsBtF,OAIN+C,CAA6CnE,I,wvBCtD9D,IAAM0B,GAAUjC,IAAOC,IAAV,MAKPiH,GAAQlH,IAAOmH,MAAV,MASLrC,GAAQ9E,IAAO4G,MAAV,MAcLQ,GAAgBpH,IAAOC,IAAV,MCxBpBO,G,iLACQ,IAAD,SACuB6B,KAAK6B,MAAzB7E,EADH,EACGA,MAAOgI,EADV,EACUA,SAEf,OACI,kBAAC,GAAD,KACI,kBAACH,GAAD,KACI,oDACA,kBAAC,GAAD,CAAOP,IAAK,SAAA9C,GAAO,OAAI,EAAKA,QAAUA,MAE1C,kBAACqD,GAAD,KACI,oDACA,kBAAC,GAAD,CAAOP,IAAK,SAAA7C,GAAQ,OAAI,EAAKA,SAAWA,MAE5C,kBAACsD,GAAD,KACI,kBAAC,IAAD,CAAQlJ,KAAK,UAAUoG,QAAS,kBAAMjF,EAAM,CAAEwE,QAAS,EAAKA,QAAQjD,MAAOkD,SAAU,EAAKA,SAASlD,UAAnG,gBACA,kBAAC,IAAD,CAAQ1C,KAAK,UAAUoG,QAAS,kBAAM+C,EAAS,CAAExD,QAAS,EAAKA,QAAQjD,MAAOkD,SAAU,EAAKA,SAASlD,UAAtG,sB,GAhBA4D,iBAoCP8C,GAAS5C,aAbE,SAAC1G,GAAD,MAAY,CAChCqB,MAAOrB,EAAM2G,MAAM,CAAC,QAAS,cAGN,SAAChD,GAAD,MAAe,CACtCtC,MADsC,SAChCJ,GACF4F,EAAkBlD,EAAU1C,IAEhCoI,SAJsC,SAI7BpI,GACL4F,EAAqBlD,EAAU1C,OAIjByF,CAA6ClE,ICvBpD+G,GARH,kBACR,kBAAC,IAAD,CAAU1F,MAAOA,GACb,kBAAC9B,EAAD,KACI,kBAAC,EAAD,S,8BCZNyH,GAASC,KAAKD,OAEdE,GAAS,CACXnK,KAAM,EACN0B,KAAM,CACFZ,QAAS,YAiCXC,GACQoF,KAAKiE,MAAMjE,KAAKC,UAAU+D,KAIlCE,GAAW,SAACxF,EAAKyF,EAAQ5I,GAAWwI,KAAKK,KAAKC,OAAO,GAAD,OAAI3F,EAAJ,OAAcyF,EAAQ5I,IAEhF2I,GAAS,OAAQ,MApCD,WACZ,IAAIrE,EAAMG,KAAKiE,MAAMjE,KAAKC,UAAU+D,KACpCnE,EAAItE,KAAKlB,KAAO,GAChB,IAAK,IAAIiK,EAAI,EAAGA,EAAIR,GAAOS,QAAQ,EAAG,IAAKD,IACvCzE,EAAItE,KAAKlB,KAAKU,KAAK,CACfxB,GAAI+K,EAAI,EACRtC,KAAM8B,GAAOU,MAAM,EAAG,GACtBnJ,QAASyI,GAAOW,WAAW,EAAG,MAGtC,OAAO5E,EA0BawD,IACxBa,GAAS,OAAQ,OAxBA,WACb,IAAIrE,EAAMG,KAAKiE,MAAMjE,KAAKC,UAAU+D,KAMpC,OALAnE,EAAItE,KAAKP,KAAO,CACZzB,GAAIuK,GAAOS,QAAQ,EAAG,KACtBvC,KAAM8B,GAAOY,OAAO,EAAG,GACvBrJ,QAASyI,GAAOW,WAAW,EAAG,IAE3B5E,EAiBc8E,IACzBT,GAAS,OAAQ,SAAUtJ,IAC3BsJ,GAAS,OAAQ,MAAOtJ,IAExBsJ,GAAS,QAAS,MAlBD,WACb,IAAIrE,EAAMG,KAAKiE,MAAMjE,KAAKC,UAAU+D,KAEpC,OADAnE,EAAItE,KAAKI,OAAQ,EACVkE,EAecgB,IACzBqD,GAAS,QAAS,OAAQtJ,IAC1BsJ,GAAS,SAAU,OAAQtJ,IAC3BsJ,GAAS,WAAY,OAAQtJ,IC/C7BgK,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SpByH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,MAAK,SAAA6E,GACjCA,EAAaC,iB,gCqBnIJ,KACX1K,SAAU2K,OAAO,YACjBpK,YAAaoK,OAAO,eACpBlK,UAAWkK,OAAO,aAClB/J,SAAU+J,OAAO,c,gCCJN,KACXxJ,MAAOwJ,OAAO,SACdtJ,OAAQsJ,OAAO,UACfvJ,SAAUuJ,OAAO,YACjBzJ,UAAWyJ,OAAO,e,gCCJP,KACX5J,WAAY4J,OAAO,cACnB3J,YAAa2J,OAAO,kB","file":"static/js/main.7eb99a62.chunk.js","sourcesContent":["var map = {\n\t\"./content.js\": 165,\n\t\"./header.js\": 207,\n\t\"./login.js\": 208\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 164;","import { fromJS } from 'immutable'\r\nimport { message } from 'antd'\r\nimport enums from '../enums/content'\r\n\r\nconst defaultProps = fromJS({\r\n    list: []\r\n})\r\n\r\nexport default (state = defaultProps, action) => {\r\n    switch (action.type) {\r\n        case enums.ADD_LIST:\r\n            message.success('发布成功')\r\n            return state.set('list', state.get('list').push(fromJS(action.item)))\r\n        case enums.DELETE_LIST:\r\n            message.success('删除成功')\r\n            return state.set('list', state.get('list').delete(action.id))\r\n        case enums.EDIT_LIST:\r\n            message.success('修改成功')\r\n            return state.setIn(['list', action.id, 'content'], action.content)\r\n        case enums.GET_LIST:\r\n            return state.set('list', fromJS(action.data))\r\n        default:\r\n            return state\r\n    }\r\n}","import { fromJS } from 'immutable'\r\nimport enums from '../enums/header'\r\n\r\nconst defaultProps = fromJS({\r\n    flag: false\r\n})\r\n\r\nexport default (state = defaultProps, action) => {\r\n    switch (action.type) {\r\n        case enums.OPEN_LOGIN:\r\n            return state.set('flag', true)\r\n        case enums.CLOSE_LOGIN:\r\n            return state.set('flag', false)\r\n        default:\r\n            return state\r\n    }\r\n}","import { fromJS } from 'immutable'\r\nimport { message } from 'antd'\r\nimport enums from '../enums/login'\r\n\r\nconst defaultProps = fromJS({\r\n    login: false\r\n})\r\n\r\nexport default (state = defaultProps, action) => {\r\n    switch (action.type) {\r\n        case enums.GET_LOGIN:\r\n            return state.set('login', action.data)\r\n        case enums.LOGIN:\r\n            message.success('登陆成功')\r\n            return state.set('login', true)\r\n        case enums.REGISTER:\r\n            message.success('注册成功')\r\n            return state.set('login', true)\r\n        case enums.LOGOUT:\r\n            message.success('注销成功')\r\n            return state.set('login', false)\r\n        default:\r\n            return state\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const AppWrapper = styled.div`\r\nborder: 1px solid gray;\r\npadding: 20px;\r\nmargin: 50px 100px;\r\nborder-radius: 20px;\r\n`","import React from 'react'\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom'\r\nimport { Header, Content, Login } from '../pages'\r\n\r\nexport const Router = () => (\r\n    <BrowserRouter>\r\n        <Header />\r\n        <Redirect to='/content' />\r\n        <Route path='/content' exact component={Content}></Route>\r\n        <Route path='/login' exact component={Login}></Route>\r\n    </BrowserRouter>\r\n)","import { createStore, applyMiddleware } from 'redux';\r\nimport { combineReducers } from 'redux-immutable';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducerModules = require.context('./reducer', true, /\\.js$/)\r\n\r\nconst asyncReducer = {}\r\nreducerModules.keys().map(item => {\r\n    const value = reducerModules(item)\r\n    asyncReducer[item.match(/\\/(\\S*)\\./)[1]] = value.default\r\n    return false\r\n})\r\n\r\nconst reducer = combineReducers(asyncReducer)\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n    features: {\r\n        pause: true, // start/pause recording of dispatched actions\r\n        lock: false, // lock/unlock dispatching actions and side effects    \r\n        persist: true, // persist states on page reloading\r\n        export: true, // export history of actions in a file\r\n        import: 'custom', // import history of actions from a file\r\n        jump: true, // jump back and forth (time travelling)\r\n        skip: true, // skip (cancel) actions\r\n        reorder: true, // drag and drop actions in the history list \r\n        dispatch: true, // dispatch custom actions or action creators\r\n        test: true // generate tests for the selected actions\r\n    },\r\n    // Specify here name, actionsBlacklist, actionsCreators and other options\r\n});\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: flex-end;\r\njustify-content: space-between;\r\n`\r\n\r\nexport const Title = styled.div`\r\nfont-size: 24px;\r\ncolor: #444;\r\n`","import enums from '../enums/header'\r\n\r\nexport default {\r\n    openLogin: () => ({ type: enums.OPEN_LOGIN }),\r\n    closeLogin: () => ({ type: enums.CLOSE_LOGIN }),\r\n}","import Axios from \"axios\"\r\n\r\nclass Base {\r\n    constructor(url) {\r\n        this.axios = Axios.create({\r\n            baseURL: url,\r\n            timeout: 5000\r\n        })\r\n    }\r\n\r\n    check() {\r\n        this.axios.interceptors.response.use(\r\n            response => {\r\n                return Promise.resolve(response)\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                switch (error.response.status) {\r\n                    case 400:\r\n                        error.message = '错误请求'\r\n                        break\r\n                    case 401:\r\n                        error.message = '未授权，请重新登录'\r\n                        break\r\n                    case 403:\r\n                        error.message = '禁止访问'\r\n                        break\r\n                    case 404:\r\n                        error.message = '请求错误,未找到该资源'\r\n                        break\r\n                    case 405:\r\n                        error.message = '请求方法未允许'\r\n                        break\r\n                    case 408:\r\n                        error.message = '请求超时'\r\n                        break\r\n                    case 413:\r\n                        error.message = '上传文件过大'\r\n                        break\r\n                    case 415:\r\n                        error.message = '请求格式未允许'\r\n                        break\r\n                    case 500:\r\n                        error.message = '服务器端出错'\r\n                        break\r\n                    case 501:\r\n                        error.message = '网络未实现'\r\n                        break\r\n                    case 502:\r\n                        error.message = '网络错误'\r\n                        break\r\n                    case 503:\r\n                        error.message = '服务不可用'\r\n                        break\r\n                    case 504:\r\n                        error.message = '网络超时'\r\n                        break\r\n                    case 505:\r\n                        error.message = 'http版本不支持该请求'\r\n                        break\r\n                    default:\r\n                        error.message = `连接错误,${error.response.msg}`\r\n                }\r\n                return Promise.reject(error)\r\n            }\r\n        )\r\n    }\r\n\r\n    full(response, flag) {\r\n        if (response.data && response.data.code === 1) {\r\n            if (!flag) {\r\n                return Promise.resolve(response.data.data)\r\n            } else {\r\n                return Promise.resolve(response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    async get(url, { data = null, fullFlag = false } = {}) {\r\n        this.check()\r\n        const res = await this.axios.get(url, data)\r\n        return this.full(res, fullFlag)\r\n    }\r\n\r\n    async post(url, { data = null, fullFlag = false } = {}) {\r\n        this.check()\r\n        const res = await this.axios.post(url, JSON.stringify(data))\r\n        return this.full(res, fullFlag)\r\n    }\r\n\r\n    async put(url, { data = null, fullFlag = false } = {}) {\r\n        this.check()\r\n        const res = await this.axios.put(url, data)\r\n        return this.full(res, fullFlag)\r\n    }\r\n\r\n    async delete(url, { data = null, fullFlag = false } = {}) {\r\n        this.check()\r\n        const res = await this.axios.delete(url, data)\r\n        return this.full(res, fullFlag)\r\n    }\r\n}\r\n\r\nconst http = new Base('/')\r\n\r\nexport default http","import enums from '../enums/login'\r\nimport * as API from '@/api/index'\r\n\r\nexport default {\r\n    login: (dispatch, data) => {\r\n        API.login(data).then(() => {\r\n            dispatch({ type: enums.LOGIN })\r\n        })\r\n    },\r\n    register: (dispatch, data) => {\r\n        API.register(data).then(() => {\r\n            dispatch({ type: enums.REGISTER })\r\n        })\r\n    },\r\n    logout: (dispatch) => {\r\n        API.logout().then(() => {\r\n            dispatch({ type: enums.LOGOUT })\r\n        })\r\n    },\r\n    getLogin: (dispatch) => {\r\n        API.getLogin().then(res => {\r\n            dispatch({ type: enums.GET_LOGIN, data: res.login })\r\n        })\r\n    },\r\n}","import http from './base'\r\n\r\n// get\r\nexport function getList() {\r\n    return http.get('list')\r\n}\r\n\r\nexport function getLogin() {\r\n    return http.get('login')\r\n}\r\n\r\n// post\r\nexport function login({ account, password }) {\r\n    return http.post('login', { data: { account, password } })\r\n}\r\n\r\nexport function register({ account, password }) {\r\n    return http.post('register', { data: { account, password } })\r\n}\r\n\r\nexport function logout() {\r\n    return http.post('logout')\r\n}\r\n\r\nexport function addList({ content }) {\r\n    return http.post('list', { data: { content } })\r\n}\r\n\r\n// delete\r\nexport function deleteList({ id }) {\r\n    return http.delete('list', { data: { id } })\r\n}\r\n\r\n// put\r\nexport function editList({ id, content }) {\r\n    return http.put('list', { data: { id, content } })\r\n}","import React, { PureComponent, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Button } from 'antd'\r\nimport { Wrapper, Title } from './style'\r\nimport actionHeader from '@/store/action/header'\r\nimport actionLogin from '@/store/action/login'\r\n\r\nclass Header extends PureComponent {\r\n    render() {\r\n        const { flag, openLogin, closeLogin, login, logout } = this.props\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Title>欢迎发布您的留言：</Title>\r\n                {\r\n                    login ?\r\n                        <Fragment>\r\n                            <Redirect to='/content' />\r\n                            <Button type='danger' onClick={() => logout()}>注销</Button>\r\n                        </Fragment>\r\n                        :\r\n                        flag ?\r\n                            <Link to='/content'>\r\n                                <Button type='primary' onClick={() => closeLogin()}>返回</Button>\r\n                            </Link>\r\n                            :\r\n                            <Link to='/login'>\r\n                                <Button type='primary' onClick={() => openLogin()}>登录</Button>\r\n                            </Link>\r\n\r\n                }\r\n            </Wrapper>\r\n        )\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.getLogin()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    flag: state.getIn(['header', 'flag']),\r\n    login: state.getIn(['login', 'login'])\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    openLogin() {\r\n        dispatch(actionHeader.openLogin())\r\n    },\r\n    closeLogin() {\r\n        dispatch(actionHeader.closeLogin())\r\n    },\r\n    logout() {\r\n        actionLogin.logout(dispatch)\r\n    },\r\n    getLogin() {\r\n        actionLogin.getLogin(dispatch)\r\n    }\r\n})\r\n\r\nexport const _header = connect(mapStateToProps, mapDispatchToProps)(Header)","import styled from 'styled-components'\r\n\r\nexport const Input = styled.textarea`\r\nwidth: 100%;\r\nheight: 300px;\r\nborder: 1px solid #444;\r\nborder-radius: 5px;\r\nmargin: 20px 0;\r\npadding: 10px;\r\nbox-sizing: border-box;\r\nfont-size: 18px;\r\noutline: none;\r\nresize: none;\r\n`","import styled from 'styled-components'\r\n\r\nexport const List = styled.div`\r\nborder: 1px solid #444;\r\nborder-radius: 5px;\r\npadding: 10px 20px;\r\nmargin-top: 20px;\r\ncolor: #444;\r\n`\r\n\r\nexport const Title = styled.div`\r\ncolor: #888;\r\nfont-size: 16px;\r\nmargin-bottom: 20px;\r\n::after{\r\ncontent:':'\r\n}\r\n`\r\n\r\nexport const Content = styled.div`\r\nfont-size: 18px;\r\ntext-indent: 2em;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\nwidth: 12%;\r\nfloat: right;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n`","import React, { PureComponent } from 'react'\r\nimport hocComponent from '@/hoc/ItemList'\r\nimport { Input, Modal } from 'antd'\r\nconst { TextArea } = Input\r\n\r\nconst ItemList = (data) => {\r\n    const Res = hocComponent(data)(props => {\r\n        const { visible, handleOk, handleCancel } = props\r\n\r\n        class Res extends PureComponent {\r\n            state = {\r\n                value: ''\r\n            }\r\n\r\n            onChange = ({ target: { value } }) => {\r\n                this.setState({ value });\r\n            }\r\n\r\n            render() {\r\n                return (\r\n                    <Modal\r\n                        title=\"修改留言\"\r\n                        visible={visible}\r\n                        onOk={() => handleOk(this.state.value)}\r\n                        onCancel={handleCancel}\r\n                    >\r\n                        <TextArea\r\n                            value={this.state.value}\r\n                            onChange={this.onChange}\r\n                            placeholder=\"Controlled autosize\"\r\n                            autoSize={{ minRows: 3, maxRows: 5 }}\r\n                        />\r\n                    </Modal>\r\n                )\r\n            }\r\n        }\r\n        return <Res />\r\n    })\r\n\r\n    return <Res />\r\n}\r\n\r\nexport default ItemList","import React, { PureComponent } from 'react'\r\nimport { List, Wrapper, Title, Content } from './style'\r\nimport { Button } from 'antd'\r\n\r\nexport default (data) => (View) => {\r\n    class hocComponent extends PureComponent {\r\n        constructor() {\r\n            super()\r\n            this.state = {\r\n                visible: false\r\n            }\r\n            this.handleOk = this.handleOk.bind(this)\r\n            this.handleCancel = this.handleCancel.bind(this)\r\n            this.edit = this.edit.bind(this)\r\n        }\r\n\r\n        render() {\r\n            const { id, name, content, index, delectList } = data\r\n\r\n            return (\r\n                <List>\r\n                    <Wrapper>\r\n                        <Button type=\"primary\" size='small' onClick={this.edit}>修改</Button>\r\n                        <Button type=\"danger\" size='small' onClick={() => delectList(index)}>删除</Button>\r\n                    </Wrapper>\r\n                    <Title>{id}-{name}</Title>\r\n                    <Content>{content}</Content>\r\n                    <View\r\n                        visible={this.state.visible}\r\n                        handleOk={this.handleOk}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                </List>\r\n            )\r\n        }\r\n\r\n        edit() {\r\n            this.setState(() => ({\r\n                visible: true\r\n            }))\r\n        }\r\n\r\n        handleOk(value) {\r\n            const { editList, index } = data\r\n            editList(index, value)\r\n        }\r\n\r\n        handleCancel() {\r\n            this.setState(() => ({\r\n                visible: false\r\n            }))\r\n        }\r\n    }\r\n\r\n    return hocComponent\r\n}","import enums from '../enums/content'\r\nimport * as API from '@/api/index'\r\n\r\nexport default {\r\n    addList: (dispatch, content) => {\r\n        API.addList({ content }).then(res => {\r\n            dispatch({ type: enums.ADD_LIST, item: res.item })\r\n        })\r\n    },\r\n    deleteList: (dispatch, id) => {\r\n        API.deleteList({ id }).then(() => {\r\n            dispatch({ type: enums.DELETE_LIST, id })\r\n        })\r\n    },\r\n    editList: (dispatch, id, content) => {\r\n        API.editList({ id, content }).then(() => {\r\n            dispatch({ type: enums.EDIT_LIST, id, content })\r\n        })\r\n    },\r\n    getList: (dispatch) => {\r\n        API.getList().then(res => {\r\n            dispatch({ type: enums.GET_LIST, data: res.list })\r\n        })\r\n    }\r\n}","import React, { PureComponent, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'antd'\r\nimport { Input } from './style'\r\nimport ItemList from '../../components/ItemList'\r\nimport actionContent from '@/store/action/content'\r\n\r\nclass Content extends PureComponent {\r\n    render() {\r\n        const { list, addList, delectList, editList } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Input ref={input => { this.input = input }}></Input>\r\n                <Button type=\"primary\" block onClick={() => addList(this.input.value)}>发布</Button>\r\n                {\r\n                    list.map((item, index) =>\r\n                        < ItemList\r\n                            key={index}\r\n                            delectList={delectList}\r\n                            editList={editList}\r\n                            index={index}\r\n                            id={item.get('id')}\r\n                            content={item.get('content')}\r\n                            name={item.get('name')}\r\n                        />\r\n                    )\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getList()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    list: state.getIn(['content', 'list'])\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addList(content) {\r\n        actionContent.addList(dispatch, content)\r\n    },\r\n    editList(id, content) {\r\n        actionContent.editList(dispatch, id, content)\r\n    },\r\n    delectList(id) {\r\n        actionContent.deleteList(dispatch, id)\r\n    },\r\n    getList() {\r\n        actionContent.getList(dispatch)\r\n    }\r\n})\r\n\r\nexport const _content = connect(mapStateToProps, mapDispatchToProps)(Content)","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\nmargin: 40px auto 0;\r\npadding: 10px;\r\n`\r\n\r\nexport const Label = styled.label`\r\nfont-size: 18px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nwidth: 80%;\r\nmargin: 10px auto;\r\n`\r\n\r\nexport const Input = styled.input`\r\nbackground-color: #efefef;\r\nwidth: 80%;\r\noutline: none;\r\nborder-radius: 8px;\r\npadding: 8px;\r\nbox-sizing: border-box;\r\nfont-size: 16px;\r\nborder: 1px solid #fdd;\r\n:focus{\r\n    border: 1px solid #ddf;\r\n}\r\n`\r\n\r\nexport const ButtonWrapper = styled.div`\r\nmargin: 60px auto 0;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\nwidth: 40%;\r\n`","import React, { PureComponent } from 'react'\r\nimport { Button } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { Wrapper, Label, Input, ButtonWrapper } from './style'\r\nimport actionLogin from '@/store/action/login'\r\n\r\nclass Login extends PureComponent {\r\n    render() {\r\n        const { login, register } = this.props\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Label>\r\n                    <span>账户：</span>\r\n                    <Input ref={account => this.account = account}></Input>\r\n                </Label>\r\n                <Label>\r\n                    <span>密码：</span>\r\n                    <Input ref={password => this.password = password}></Input>\r\n                </Label>\r\n                <ButtonWrapper>\r\n                    <Button type='default' onClick={() => login({ account: this.account.value, password: this.password.value })}>登陆</Button>\r\n                    <Button type='primary' onClick={() => register({ account: this.account.value, password: this.password.value })}>注册</Button>\r\n                </ButtonWrapper>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    login: state.getIn(['login', 'login'])\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login(data) {\r\n        actionLogin.login(dispatch, data)\r\n    },\r\n    register(data) {\r\n        actionLogin.register(dispatch, data)\r\n    }\r\n})\r\n\r\nexport const _login = connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { AppWrapper } from './style'\r\nimport { Router } from '../router'\r\nimport store from '../store'\r\n\r\n// 导出到 router\r\nexport { _header as Header } from './header';\r\nexport { _content as Content } from './content';\r\nexport { _login as Login } from './login';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <AppWrapper>\r\n            <Router></Router>\r\n        </AppWrapper>\r\n    </Provider>\r\n)\r\n\r\nexport default App","import Mock from 'mockjs'\r\n\r\nconst Random = Mock.Random\r\n\r\nconst result = {\r\n    code: 1,\r\n    data: {\r\n        message: 'success'\r\n    }\r\n}\r\n\r\nconst getList = () => {\r\n    let res = JSON.parse(JSON.stringify(result))\r\n    res.data.list = []\r\n    for (let i = 0; i < Random.integer(5, 10); i++) {\r\n        res.data.list.push({\r\n            id: i + 1,\r\n            name: Random.cname(2, 3),\r\n            content: Random.cparagraph(3, 10)\r\n        })\r\n    }\r\n    return res\r\n}\r\n\r\nconst postList = () => {\r\n    let res = JSON.parse(JSON.stringify(result))\r\n    res.data.item = {\r\n        id: Random.integer(0, 1000),\r\n        name: Random.ctitle(2, 9),\r\n        content: Random.cparagraph(7, 9)\r\n    }\r\n    return res\r\n}\r\n\r\nconst getLogin = () => {\r\n    let res = JSON.parse(JSON.stringify(result))\r\n    res.data.login = true\r\n    return res\r\n}\r\n\r\nconst success = (() => {\r\n    let res = JSON.parse(JSON.stringify(result))\r\n    return res\r\n})()\r\n\r\nconst decroate = (url, method, data) => { Mock.mock(RegExp(`${url}.*`), method, data) }\r\n\r\ndecroate('list', 'get', getList())\r\ndecroate('list', 'post', postList())\r\ndecroate('list', 'delete', success)\r\ndecroate('list', 'put', success)\r\n\r\ndecroate('login', 'get', getLogin())\r\ndecroate('login', 'post', success)\r\ndecroate('logout', 'post', success)\r\ndecroate('register', 'post', success)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from '@/serviceWorker';\r\nimport 'antd/dist/antd.css';\r\nimport App from './pages';\r\nimport './style.scss'\r\nimport './utils/mock'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export default {\r\n    ADD_LIST: Symbol('add_list'),\r\n    DELETE_LIST: Symbol('delete_list'),\r\n    EDIT_LIST: Symbol('edit_list'),\r\n    GET_LIST: Symbol('get_list'),\r\n}","export default {\r\n    LOGIN: Symbol('login'),\r\n    LOGOUT: Symbol('logout'),\r\n    REGISTER: Symbol('register'),\r\n    GET_LOGIN: Symbol('get_login'),\r\n}","export default {\r\n    OPEN_LOGIN: Symbol('open_login'),\r\n    CLOSE_LOGIN: Symbol('close_login')\r\n}"],"sourceRoot":""}